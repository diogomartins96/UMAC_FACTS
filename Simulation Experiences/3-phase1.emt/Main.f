!=======================================================================
! Generated by  : PSCAD v4.2.1
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Main
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE DSDyn()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

!     SUBR    3PHVSRC       ! 3-Phase Source model

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Parameters

! Electrical Node Indexes

! Control Signals
      REAL    RT_1(31), RT_2(31), RT_3(31), Ia
      REAL    DPF, RT_4, RT_5, RT_6, RT_7, RT_8
      REAL    PF, RT_9(31), RT_10, RT_11, D, Ea
      REAL    Ea_phase, Ia_phase, Ea_1, Ia_1
      REAL    Ia_RMS, Ea_RMS, S, P, Q, RT_12
      REAL    RT_13, RT_14, RT_15(31), RT_16
      REAL    RT_17, RT_18, Ib, Eb, Ec, Ic, Isn

! Internal Variables
      REAL    E_MAG, F_RAD, R_PH

! Indexing variables
      INTEGER ISTOF, IT_0                         ! Storage Indexes
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Record local indexes
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage
      NTXFR = NTXFR + 1
      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF

! Record Offset and Increment Storage Counters
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 187
      NPGB      = NPGB + 39
      INODE     = NNODE + 2
      NNODE     = NNODE + 21

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO 100  IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
  100 CONTINUE

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 43

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Ia       = STOF(ISTOF + 94)
      DPF      = STOF(ISTOF + 95)
      RT_4     = STOF(ISTOF + 96)
      RT_5     = STOF(ISTOF + 97)
      RT_6     = STOF(ISTOF + 98)
      RT_7     = STOF(ISTOF + 99)
      RT_8     = STOF(ISTOF + 100)
      PF       = STOF(ISTOF + 101)
      RT_10    = STOF(ISTOF + 133)
      RT_11    = STOF(ISTOF + 134)
      D        = STOF(ISTOF + 135)
      Ea       = STOF(ISTOF + 136)
      Ea_phase = STOF(ISTOF + 137)
      Ia_phase = STOF(ISTOF + 138)
      Ea_1     = STOF(ISTOF + 139)
      Ia_1     = STOF(ISTOF + 140)
      Ia_RMS   = STOF(ISTOF + 141)
      Ea_RMS   = STOF(ISTOF + 142)
      S        = STOF(ISTOF + 143)
      P        = STOF(ISTOF + 144)
      Q        = STOF(ISTOF + 145)
      RT_12    = STOF(ISTOF + 146)
      RT_13    = STOF(ISTOF + 147)
      RT_14    = STOF(ISTOF + 148)
      RT_16    = STOF(ISTOF + 180)
      RT_17    = STOF(ISTOF + 181)
      RT_18    = STOF(ISTOF + 182)
      Ib       = STOF(ISTOF + 183)
      Eb       = STOF(ISTOF + 184)
      Ec       = STOF(ISTOF + 185)
      Ic       = STOF(ISTOF + 186)
      Isn      = STOF(ISTOF + 187)

! Array(1:31) quantities...
      DO 101  IT_0 = 1,31
         RT_1(IT_0) = STOF(ISTOF + 0 + IT_0)
         RT_2(IT_0) = STOF(ISTOF + 31 + IT_0)
         RT_3(IT_0) = STOF(ISTOF + 62 + IT_0)
         RT_9(IT_0) = STOF(ISTOF + 101 + IT_0)
         RT_15(IT_0) = STOF(ISTOF + 148 + IT_0)
  101 CONTINUE

!---------------------------------------
! Transfer from Imports
!---------------------------------------


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Read Model data (if any)
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+31), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+21), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+18), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+12), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+22), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+24), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[source_3] Three Phase Voltage Source Model 2 'Source 1'
! Three Phase Source: Source 1  Type: Ideal
!  Mag: 0.311085197333 kV, Freq: 50.0 Hz, Phase: 0.0 degs, StartUp: 0.05 sec
      E_MAG = 0.311085197333
      F_RAD = 314.159265359
      R_PH  = 0.0*PI_BY180
      CALL EMTDC_3PHVSRC(SS(1), (IBRCH(1)+13), (IBRCH(1)+14), (IBRCH(1)+&
     &15), 0.05, .TRUE., E_MAG , F_RAD, R_PH)
!

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+26), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+28), 0.01, 1000000.0, 1, 0.&
     &0, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+3), 0.01, 1000000.0, 1, 0.0&
     &, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+5), 0.01, 1000000.0, 1, 0.0&
     &, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+7), 0.01, 1000000.0, 1, 0.0&
     &, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

! -1:[peswitch] Power electronic switch 
! EMTDC_PESWITCH Power Electronic Switch Model: Diode
      CALL EMTDC_PESWITCH2(SS(1),  (IBRCH(1)+9), 0.01, 1000000.0, 1, 0.0&
     &, 0, 0, 100000.0, 100000.0, 0.0, 0.0)

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 94) = Ia
      STOF(ISTOF + 95) = DPF
      STOF(ISTOF + 96) = RT_4
      STOF(ISTOF + 97) = RT_5
      STOF(ISTOF + 98) = RT_6
      STOF(ISTOF + 99) = RT_7
      STOF(ISTOF + 100) = RT_8
      STOF(ISTOF + 101) = PF
      STOF(ISTOF + 133) = RT_10
      STOF(ISTOF + 134) = RT_11
      STOF(ISTOF + 135) = D
      STOF(ISTOF + 136) = Ea
      STOF(ISTOF + 137) = Ea_phase
      STOF(ISTOF + 138) = Ia_phase
      STOF(ISTOF + 139) = Ea_1
      STOF(ISTOF + 140) = Ia_1
      STOF(ISTOF + 141) = Ia_RMS
      STOF(ISTOF + 142) = Ea_RMS
      STOF(ISTOF + 143) = S
      STOF(ISTOF + 144) = P
      STOF(ISTOF + 145) = Q
      STOF(ISTOF + 146) = RT_12
      STOF(ISTOF + 147) = RT_13
      STOF(ISTOF + 148) = RT_14
      STOF(ISTOF + 180) = RT_16
      STOF(ISTOF + 181) = RT_17
      STOF(ISTOF + 182) = RT_18
      STOF(ISTOF + 183) = Ib
      STOF(ISTOF + 184) = Eb
      STOF(ISTOF + 185) = Ec
      STOF(ISTOF + 186) = Ic
      STOF(ISTOF + 187) = Isn

! Array(1:31) quantities...
      DO 102  IT_0 = 1,31
         STOF(ISTOF + 0 + IT_0) = RT_1(IT_0)
         STOF(ISTOF + 31 + IT_0) = RT_2(IT_0)
         STOF(ISTOF + 62 + IT_0) = RT_3(IT_0)
         STOF(ISTOF + 101 + IT_0) = RT_9(IT_0)
         STOF(ISTOF + 148 + IT_0) = RT_15(IT_0)
  102 CONTINUE

!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE DSOut()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
!     SUBR    DGTL_RMS      ! 'RMS Measurement using Digital Samlping'
!     SUBR    FTN180        ! FFT Calculation
      REAL    THDN          ! Harmonic Distortion Calculation
      REAL    VBRANCH       ! Voltage across the branch

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indexes
      INTEGER NT_7, NT_13, NT_14

! Control Signals
      REAL    RT_1(31), RT_2(31), RT_3(31), Ia
      REAL    DPF, RT_4, RT_5, RT_6, RT_7, RT_8
      REAL    PF, RT_9(31), RT_10, RT_11, D, Ea
      REAL    Ea_phase, Ia_phase, Ea_1, Ia_1
      REAL    Ia_RMS, Ea_RMS, S, P, Q, RT_12
      REAL    RT_13, RT_14, RT_15(31), RT_16
      REAL    RT_17, RT_18, Ib, Eb, Ec, Ic, Isn

! Internal Variables
      INTEGER IPD_TE, IVD1_1

! Indexing variables
      INTEGER ISTOL, ISTOI, ISTOF, IT_0           ! Storage Indexes
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER ISUBS, SS(1), IBRCH(1), INODE       ! SS/Node/Branch/Xfmr


!---------------------------------------
! Record local indexes
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage
      NTXFR = NTXFR + 1
      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)

! Record Offset and Increment Storage Counters
      IPGB      = NPGB
      NPGB      = NPGB + 39
      INODE     = NNODE + 2
      NNODE     = NNODE + 21

! Initialize Subsystem Mapping

      ISUBS = NSUBS + 0
      NSUBS = NSUBS + 1

      DO 100  IT_0 = 1,1
         SS(IT_0) = SUBS(ISUBS + IT_0)
  100 CONTINUE

! Initialize Branch Mapping.

      IBRCH(1)     = NBRCH(SS(1))
      NBRCH(SS(1)) = NBRCH(SS(1)) + 43

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Ia       = STOF(ISTOF + 94)
      DPF      = STOF(ISTOF + 95)
      RT_4     = STOF(ISTOF + 96)
      RT_5     = STOF(ISTOF + 97)
      RT_6     = STOF(ISTOF + 98)
      RT_7     = STOF(ISTOF + 99)
      RT_8     = STOF(ISTOF + 100)
      PF       = STOF(ISTOF + 101)
      RT_10    = STOF(ISTOF + 133)
      RT_11    = STOF(ISTOF + 134)
      D        = STOF(ISTOF + 135)
      Ea       = STOF(ISTOF + 136)
      Ea_phase = STOF(ISTOF + 137)
      Ia_phase = STOF(ISTOF + 138)
      Ea_1     = STOF(ISTOF + 139)
      Ia_1     = STOF(ISTOF + 140)
      Ia_RMS   = STOF(ISTOF + 141)
      Ea_RMS   = STOF(ISTOF + 142)
      S        = STOF(ISTOF + 143)
      P        = STOF(ISTOF + 144)
      Q        = STOF(ISTOF + 145)
      RT_12    = STOF(ISTOF + 146)
      RT_13    = STOF(ISTOF + 147)
      RT_14    = STOF(ISTOF + 148)
      RT_16    = STOF(ISTOF + 180)
      RT_17    = STOF(ISTOF + 181)
      RT_18    = STOF(ISTOF + 182)
      Ib       = STOF(ISTOF + 183)
      Eb       = STOF(ISTOF + 184)
      Ec       = STOF(ISTOF + 185)
      Ic       = STOF(ISTOF + 186)
      Isn      = STOF(ISTOF + 187)

! Array(1:31) quantities...
      DO 101  IT_0 = 1,31
         RT_1(IT_0) = STOF(ISTOF + 0 + IT_0)
         RT_2(IT_0) = STOF(ISTOF + 31 + IT_0)
         RT_3(IT_0) = STOF(ISTOF + 62 + IT_0)
         RT_9(IT_0) = STOF(ISTOF + 101 + IT_0)
         RT_15(IT_0) = STOF(ISTOF + 148 + IT_0)
  101 CONTINUE

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------

      NT_7  = NODE(INODE + 7)
      NT_13 = NODE(INODE + 13)
      NT_14 = NODE(INODE + 14)

!---------------------------------------
! Read Model data (if any)
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Main.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[voltmetergnd] Voltmeter (Line - Ground) 'Ea'
      Ea = EMTDC_VVDC(SS(1), NT_7, 0)

! 20:[ammeter] Current Meter 'Ia'
      Ia = ( CBR((IBRCH(1)+1), SS(1)))

! 30:[voltmetergnd] Voltmeter (Line - Ground) 'Eb'
      Eb = EMTDC_VVDC(SS(1), NT_13, 0)

! 40:[ammeter] Current Meter 'Ib'
      Ib = ( CBR((IBRCH(1)+17), SS(1)))

! 50:[rms-inst] Single Phase RMS Meter 
!
      CALL DGTL_RMS(64,50.0,Ea,1.0,0.0,Ea_RMS)

! 60:[voltmetergnd] Voltmeter (Line - Ground) 'Ec'
      Ec = EMTDC_VVDC(SS(1), NT_14, 0)

! 70:[ammeter] Current Meter 'Ic'
      Ic = ( CBR((IBRCH(1)+20), SS(1)))

! 80:[pgb] Output Channel 'Ea'

      PGB(IPGB+1) = 1000.0 * Ea

! 90:[fft] On-Line Frequency Scanner 
!
!  FAST FOURIER TRANSFORMATION
!
      IPD_TE=0
      CALL FTN180(0,0,31,1,50.0,50.0,Ea,IPD_TE,RT_1,RT_2,RT_12)
!

! 100:[ammeter] Current Meter 'Isn'
      Isn = ( CBR((IBRCH(1)+2), SS(1)))

! 110:[fft] On-Line Frequency Scanner 
!
!  FAST FOURIER TRANSFORMATION
!
      IPD_TE=0
      CALL FTN180(0,0,31,1,50.0,50.0,Ia,IPD_TE,RT_9,RT_3,RT_13)
!

! 120:[rms-inst] Single Phase RMS Meter 
!
      CALL DGTL_RMS(64,50.0,Ia,1.0,0.0,Ia_RMS)

! 130:[datatap] Scalar/Array Tap 
       Ea_1 = RT_1(1)

! 140:[datatap] Scalar/Array Tap 
       Ea_phase = RT_2(1)

! 150:[datatap] Scalar/Array Tap 
       Ia_1 = RT_9(1)

! 160:[thd] Harmonic Distortion Calculator 
! Harmonic Distortion
      RT_14=THDN(31,0,RT_9,RT_15)
!

! 170:[datatap] Scalar/Array Tap 
       Ia_phase = RT_3(1)

! 180:[mult] Multiplier 
!
      S = Ea_RMS * Ia_RMS
!

! 190:[sumjct] Summing/Differencing Junctions 
      DPF = + Ea_phase - Ia_phase
!

! 200:[trig] Trigonometric Functions 
!  Trig-Func
      RT_4 = COS(DPF)
!

! 210:[mult] Multiplier 
!
      RT_5 = RT_4 * Ea_1
!

! 220:[mult] Multiplier 
!
      P = RT_5 * Ia_1
!

! 230:[sumjct] Summing/Differencing Junctions 
      RT_6 = + Ea_phase - Ia_phase
!

! 240:[div] Divider 
!
      IF (ABS(S) .LT. 1.0E-10) THEN
         IF (S .LT. 0.0)  THEN
            PF = -1.0E10 * P
         ELSE
            PF =  1.0E10 * P
         ENDIF
      ELSE
         PF = P / S
      ENDIF
!

! 250:[trig] Trigonometric Functions 
!  Trig-Func
      RT_7 = SIN(RT_6)
!

! 260:[mult] Multiplier 
!
      RT_8 = RT_7 * Ea_1
!

! 270:[mult] Multiplier 
!
      Q = RT_8 * Ia_1
!

! 280:[square] Square 
!
      RT_17 = S * S
!

! 290:[square] Square 
!
      RT_10 = P * P
!

! 300:[square] Square 
!
      RT_11 = Q * Q
!

! 310:[sumjct] Summing/Differencing Junctions 
      RT_18 = + RT_17 - RT_10
!

! 320:[sumjct] Summing/Differencing Junctions 
      RT_16 = + RT_18 - RT_11
!

! 330:[sqrt] Square Root 
!
      IF (RT_16 .LE. 0.0) THEN
         D = 0.0
      ELSE
         D = SQRT(RT_16)
      ENDIF
!

! 340:[pgb] Output Channel 'D'

      PGB(IPGB+2) = 1000000.0 * D

! 350:[pgb] Output Channel 'Q'

      PGB(IPGB+3) = 1000000.0 * Q

! 360:[pgb] Output Channel 'PF'

      PGB(IPGB+4) = PF

! 370:[pgb] Output Channel 'P'

      PGB(IPGB+5) = 1000000.0 * P

! 380:[pgb] Output Channel 'S'

      PGB(IPGB+6) = 1000000.0 * S

! 390:[pgb] Output Channel '<Untitled>'

      DO IVD1_1 = 1, 31
         PGB(IPGB+7+IVD1_1-1) = RT_15(IVD1_1)
      ENDDO

! 400:[pgb] Output Channel 'DPF'

      PGB(IPGB+38) = DPF

! 410:[pgb] Output Channel 'Ia'

      PGB(IPGB+39) = 1000.0 * Ia

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 94) = Ia
      STOF(ISTOF + 95) = DPF
      STOF(ISTOF + 96) = RT_4
      STOF(ISTOF + 97) = RT_5
      STOF(ISTOF + 98) = RT_6
      STOF(ISTOF + 99) = RT_7
      STOF(ISTOF + 100) = RT_8
      STOF(ISTOF + 101) = PF
      STOF(ISTOF + 133) = RT_10
      STOF(ISTOF + 134) = RT_11
      STOF(ISTOF + 135) = D
      STOF(ISTOF + 136) = Ea
      STOF(ISTOF + 137) = Ea_phase
      STOF(ISTOF + 138) = Ia_phase
      STOF(ISTOF + 139) = Ea_1
      STOF(ISTOF + 140) = Ia_1
      STOF(ISTOF + 141) = Ia_RMS
      STOF(ISTOF + 142) = Ea_RMS
      STOF(ISTOF + 143) = S
      STOF(ISTOF + 144) = P
      STOF(ISTOF + 145) = Q
      STOF(ISTOF + 146) = RT_12
      STOF(ISTOF + 147) = RT_13
      STOF(ISTOF + 148) = RT_14
      STOF(ISTOF + 180) = RT_16
      STOF(ISTOF + 181) = RT_17
      STOF(ISTOF + 182) = RT_18
      STOF(ISTOF + 183) = Ib
      STOF(ISTOF + 184) = Eb
      STOF(ISTOF + 185) = Ec
      STOF(ISTOF + 186) = Ic
      STOF(ISTOF + 187) = Isn

! Array(1:31) quantities...
      DO 102  IT_0 = 1,31
         STOF(ISTOF + 0 + IT_0) = RT_1(IT_0)
         STOF(ISTOF + 31 + IT_0) = RT_2(IT_0)
         STOF(ISTOF + 62 + IT_0) = RT_3(IT_0)
         STOF(ISTOF + 101 + IT_0) = RT_9(IT_0)
         STOF(ISTOF + 148 + IT_0) = RT_15(IT_0)
  102 CONTINUE

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

